-- ===================================================================================
-- BigQuery SQL Script: IODS_CONS_CSV_DNTL_CLMDTL_HX_BR1
-- Version: 1
--
-- Description:
-- This script is a conversion of the Ab Initio graph IODS_CONS_CSV_DNTL_CLMDTL_HX_BR1.mp.
-- It processes dental claim detail history data. The logic mirrors the original
-- graph's flow: joining data sources, applying transformations, sorting, and
-- producing the final output.
--
-- Modular Design:
-- Each Ab Initio component (JOIN, REFORMAT, SORT) is represented by a
-- Common Table Expression (CTE) for clarity and maintainability.
--
-- UDF Usage:
-- Transformations are handled by calling BigQuery User-Defined Functions (UDFs)
-- as specified in the conversion requirements.
-- ===================================================================================

-- Define placeholder project and dataset names.
-- In a real environment, these should be parameterized or replaced.
-- DECLARE source_project_id STRING DEFAULT 'your-gcp-project-id';
-- DECLARE source_dataset_id STRING DEFAULT 'your_source_dataset';
-- DECLARE target_project_id STRING DEFAULT 'your-gcp-project-id';
-- DECLARE target_dataset_id STRING DEFAULT 'your_target_dataset';
-- DECLARE udf_dataset_id STRING DEFAULT 'your_udf_dataset';


WITH
-- ===================================================================================
-- CTE: JNR_CLMDTL_CLM_HX_BR1
--
-- Description:
-- This CTE replicates the JOIN component from the Ab Initio graph.
-- It joins the primary claim detail table with a claim history table.
--
-- Join Type: INNER JOIN (assumed from typical ETL patterns)
-- Join Keys: Assumed to be claim_id and member_id.
-- ===================================================================================
JNR_CLMDTL_CLM_HX_BR1 AS (
  SELECT
    -- Select columns from the first input (inp1)
    inp1.claim_id,
    inp1.claim_line_id,
    inp1.member_id,
    inp1.service_date,
    inp1.procedure_code,
    inp1.billed_amount,
    inp1.paid_amount,
    -- Select columns from the second input (inp2)
    inp2.claim_status,
    inp2.last_updated_date,
    inp2.history_record_id
  FROM
    `your-gcp-project-id.your_source_dataset.dental_claim_details` AS inp1
  INNER JOIN
    `your-gcp-project-id.your_source_dataset.dental_claim_history` AS inp2
  ON
    inp1.claim_id = inp2.claim_id
),

-- ===================================================================================
-- CTE: RFM_DNTL_CLMDTL_CLM_HX_BR1
--
-- Description:
-- This CTE replicates the REFORMAT component from the Ab Initio graph.
-- It applies business logic transformations to the joined data.
-- Transformations are encapsulated within a BigQuery UDF for modularity.
-- ===================================================================================
RFM_DNTL_CLMDTL_CLM_HX_BR1 AS (
  SELECT
    -- Call the UDF to perform complex transformations.
    -- The UDF is expected to return a STRUCT containing all the transformed fields.
    `your-gcp-project-id.your_udf_dataset.fn_transform_dental_claim_detail`(
      t.*
    ) AS transformed_data
  FROM
    JNR_CLMDTL_CLM_HX_BR1 AS t
),

-- ===================================================================================
-- CTE: SRT_CLMDTL_CLM_HX_BR1
--
-- Description:
-- This CTE replicates the SORT component from the Ab Initio graph.
-- It sorts the transformed data based on specified keys. This is often used
-- for analytical functions, de-duplication, or ordered output.
--
-- Sort Keys: claim_id, service_date DESC
-- ===================================================================================
SRT_CLMDTL_CLM_HX_BR1 AS (
  SELECT
    -- Unpack the struct returned by the UDF
    transformed_data.*
  FROM
    RFM_DNTL_CLMDTL_CLM_HX_BR1
  ORDER BY
    claim_id,
    service_date DESC
)

-- ===================================================================================
-- Final SELECT Statement
--
-- Description:
-- This is the final output of the pipeline, selecting all columns from the
-- last processing step (SORT). The output corresponds to the target table
-- ODS_CONS_CSV_DNTL_CLMDTL_HX_BR1.
-- ===================================================================================
SELECT
  -- Selecting specific columns for the final output.
  -- The column list is assumed based on the transformation logic.
  claim_id,
  claim_line_id,
  member_id,
  service_date,
  procedure_code,
  billed_amount,
  paid_amount,
  claim_status,
  last_updated_date,
  history_record_id,
  -- Additional columns that might be generated by the UDF
  processed_timestamp,
  data_quality_score,
  is_outlier_flag
FROM
  SRT_CLMDTL_CLM_HX_BR1;